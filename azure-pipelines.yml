# Node.js with Vue
# Build a Node.js project that uses Vue.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    echo "yarn install --registry https://registry.yarnpkg.com --no-lockfile"
    # yarn docs:build 
  displayName: 'yarn install and build'

- script: 
    echo "##vso[task.setvariable variable=myOutputVar;isOutput=true]this is the slice $(system.jobPositionInPhase) value"
  name: setvarStep
- script: echo $(setvarStep.myOutputVar)
  name: echovar

# Create a variable
- bash: |
    echo "##vso[task.setvariable variable=sauce]crushed tomatoes"
    BUBU='AFAFAFAFAF'
    echo "BUBU" $BUBU

# Use the variable
# "$(sauce)" is replaced by the contents of the `sauce` variable by Azure Pipelines
# before handing the body of the script to the shell.
- bash: |
    echo my pipeline variable is $(sauce)
    echo "BUBU IS" $BUBU

- bash: |
    # Get build dir
    if [[ -z "BUILD_DIR" ]]; then
      build_dir="$(pwd)"/docs/.vuepress/dist
    else
      build_dir="$(pwd)"/"$BUILD_DIR"
    fi
    echo "build_dir:"
    echo $build_dir
    
    # set variable: deploy_dir 
    # @see https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops
    echo "##vso[task.setvariable variable=build_dir]$build_dir"
    export
    pwd
    ls
  displayName: 'Enter build dir...'

- bash: |
    echo build_dir="$(build_dir)"

- script: |
    if [ "$CNAME" ]; then
      echo "Generating a CNAME file..."
      echo $CNAME > CNAME
    fi
    pwd
    ls
    export
  workingDirectory: $(deploy_dir)
  displayName: 'Generate a CNAME file'

- script: |
    export
    echo $Build.SourceVersion
    echo $(Release.ReleaseId)
    DEPLOY_REPO="https://${ACCESS_TOKEN}@github.com/${REPOSITORY_NAME}.git"
    if [[ -z "$TARGET_BRANCH" ]]; then
      DEPLOY_BRANCH="gh-pages"
    else
      DEPLOY_BRANCH="$TARGET_BRANCH"
    fi
    pwd
    ls
    #git add --all;
    git commit -m"Pipelines-Bot: Auto deploy via $(Build.SourceVersion)";
    #git push --force $DEPLOY_REPO master:$DEPLOY_BRANCH
    #workingDirectory: $DEPLOY_DIR
  displayName: '[Git] Commit and push to Github Pages branch'


