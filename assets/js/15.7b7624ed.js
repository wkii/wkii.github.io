(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{428:function(s,e,a){"use strict";a.r(e);var t=a(3),i=Object(t.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("我发现很多人依然对git无所适从。那我就写个简明操作教程来供还在学习路上的同学参考。")]),s._v(" "),e("h2",{attrs:{id:"git工作原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git工作原理"}},[s._v("#")]),s._v(" git工作原理:")]),s._v(" "),e("ol",[e("li",[s._v("分布式,每个克隆或更新远程仓库的用户都拥有⼀一份最新的完整的仓库。")]),s._v(" "),e("li",[s._v("分支结构,不要直接操作remote的远程分支,应该首先checkout⼀一份到本地分支。远程分 支是指与远程仓库上同步的分支。而你所有的操作应该是在你的本地分支上操作。")]),s._v(" "),e("li",[s._v("时刻记得你在那个分支下工作,因为你切换到任何分支都不会改变本地目录")]),s._v(" "),e("li",[s._v("“origin”代表远程仓库,为默认的远程仓库别名")]),s._v(" "),e("li",[s._v("git的分支仅仅是⼀一个提交的标记,而不是目录,与svn的目录式分支结构不同")]),s._v(" "),e("li",[s._v("仓库的意义是整个代码仓库,本地分支/远程分支,都是你本地仓库中的分支")])]),s._v(" "),e("h2",{attrs:{id:"git常用操作命令及解释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git常用操作命令及解释"}},[s._v("#")]),s._v(" git常用操作命令及解释")]),s._v(" "),e("p",[s._v("注:以下所有以$开头的,为命令行操作,$之后的是命令, #号之后是注释 1.克隆一个仓库")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ git clone git@youdomain.com:project.git #相当于svn checkout\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("然后进入仓库目录,运行如下命令来忽略git对于文件权限的检查")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ git config core.filemode false\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("然后设置你的帐户和邮箱")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('$ git config user.name = "Terry"\n$ git config user.email = "terry@youdomain.com"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("2.抽取⼀一个分支以及切换到⼀一个分支(切记,要得到⼀一个分支,应该先抽取它,把它抽取到 本地,生成⼀一个本地分支) 命令格式 git checkout 本地分支名 origin/远程分支名,通常,本地分支名和远程分支名⼀一 样,当然,也可以不⼀一样。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ git checkout release/0.2 origin/release/0.2\n\n$ git checkout master origin/master\n\n$ git checkout master #切换分支也是使用checkout,只不过不再输入远程分支信息\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("3.查看分支,注意,*号在那个分支名前面,就说明你目前处在那个分支下。 查看本地分支:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ git branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("查看所有分支,包括你仓库中的远程分支:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ git branch -a\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("更新你本地仓库的所有分支和远程仓库的分支保持⼀一致,主要是 删掉本地仓库中与远程仓库相比较,已经不存在的分支:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ git remote prune origin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("4.本地仓库分支的创建和删除")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ git branch 分支名 #创建⼀一个本地分支\n\n$ git branch -d 分支名 #删除⼀一个本地分支,参数 -D 强制删除,删除前要先切换到其它分支\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("5.更新仓库但不将修改合并分支的修改")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ git fetch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("6.更新仓库且将修改合并到本地分支,这个最常用,相当于svn up")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ git pull\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("7.查看状态,是否有提交,删除,更新等信息,如果看到大批文件权限有更新,请使用“git config core.filemode false” 来忽略权限检查")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ git status\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("8.提交,注意:提交仅仅是将你的修改提交到你本地的仓库,而非远程")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ git commit -m “提交注释”\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("如果之前未使用 git add 将修改的文件加入暂存区,可再加⼀一个参数 -a 来将所有未暂存的修 改提交 9.推送到远程仓库,只有将你的修改或分支推送到远程仓库,其它人才能从该远程仓库获取")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ git push origin #推送当前分支到远程仓库,前提是远程仓库有这个分支\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("命令格式 git push origin 本地分支名:远程分支名,本地和远程分支名可以不⼀一样,远程分支 名是推送到远程仓库的分支名 10.删除远程仓库中的分支")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ git push origin :远程分支名\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[s._v("#")]),s._v(" 工作流程")]),s._v(" "),e("ol",[e("li",[s._v("生成你的公钥和私钥,将公钥发给git仓库管理员")]),s._v(" "),e("li",[s._v("克隆一个仓库")]),s._v(" "),e("li",[s._v("检出一个远程分支到本地分支")]),s._v(" "),e("li",[s._v("在本地分支上进行开发工作并提交")]),s._v(" "),e("li",[s._v("将你的提交推送到远程仓库")]),s._v(" "),e("li",[s._v("要经常更新你的本地分支 git pull")]),s._v(" "),e("li",[s._v("对于开发人员，不要在develop分支上直接开发，创建feature分支并publish协同开发。")]),s._v(" "),e("li",[s._v("对于开发人员，要经常合并常规开发分支develop到你的feature分支上，以降低冲突的积累。")]),s._v(" "),e("li",[s._v("第7、8条参照git-flow分支模型来规划。")])])])}),[],!1,null,null,null);e.default=i.exports}}]);